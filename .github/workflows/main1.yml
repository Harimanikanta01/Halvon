name: MERN CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push backend image
      - name: Build & Push Backend
        run: |
          docker compose -f docker-compose.yaml build backend
          docker tag halvon-backend your-dockerhub-user/halvon-backend:latest
          docker push your-dockerhub-user/halvon-backend:latest

      # Step 5: Build and push frontend image
      - name: Build & Push Frontend
        run: |
          docker compose -f docker-compose.yaml build frontend
          docker tag halvon-frontend your-dockerhub-user/halvon-frontend:latest
          docker push your-dockerhub-user/halvon-frontend:latest

      # Step 6: Run backend tests
      - name: Run backend tests
        run: docker compose -f docker-compose.yaml run --rm backend npm test

      # Step 7: Setup SSH key for EC2
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > console.pem
          chmod 400 console.pem

      # Step 8: Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i console.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ec2-user/Halvon
            git pull origin main
            docker compose pull
            docker compose up -d
          EOF
